<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo Book</title><link>https://airdb.wiki/deancn/wiki/linux/shell/</link><description>Recent content on Hugo Book</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://airdb.wiki/deancn/wiki/linux/shell/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://airdb.wiki/deancn/wiki/linux/shell/bash-completion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/bash-completion/</guid><description>Bash Command for Developer # Bash Completion # Reference
Bash completion is a bash function that allows you to auto complete commands or arguments by typing partially commands or arguments, then pressing the [Tab] key. This will help you when writing the bash command in terminal.
Installation # $ brew install bash-completion Bash completion will be installed in /usr/local/etc/bash_completion.d. For it to work, add this to your ~/.bash_profile:
$ echo &amp;#34;[ -f /usr/local/etc/bash_completion ] &amp;amp;&amp;amp; .</description></item><item><title/><link>https://airdb.wiki/deancn/wiki/linux/shell/bash-prog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/bash-prog/</guid><description>Bash Programming # 学习地址 # BASH Programming - Introduction HOW-TO
编程规范 # Google Shell Code Style
一些 Debug 技巧 # set -x set -e export PS4=&amp;#39;+${BASH_SOURCE}:${LINENO}:${FUNCNAME[0]}: &amp;#39; echo &amp;#34;Today is $(date %Y-%m-%d)&amp;#34; set +x 说明： PS4 The value of this parameter is expanded as with PS1 and the value is printed before each command bash displays during an execution trace. The first character of PS4 is replicated multiple times, as neces-sary, to indicate multiple levels of indirection.</description></item><item><title/><link>https://airdb.wiki/deancn/wiki/linux/shell/bash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/bash/</guid><description>Bash # Profile 执行顺序 # 登录 Linux 时，首先启动 /etc/profile 文件，然后再启动用户目录下的 ~/.bash_profile、 ~/.bash_login或 ~/.profile文件中的其中一个, 一般还会执行 ~/.bashrc文件。
~/.bash_logout，每次退出系统或退出bash shell时,执行该文件。
❗️注意: 部分系统只读取~/.bashrc (不读取 ~/.bash_prfoile), 如 BusyBox
Bash 环境变量 # # 公共 $LOGNAME: 登录用户名 $HOME: 当前用户家目录 export PS1=&amp;#34;[\u@\H \W]\\$ &amp;#34; export HISTTIMEFORMAT=&amp;#34;%F %T `whoami` &amp;#34; export TMOUT=600 # 600 秒内用户无操作就字段断开终端 常用别名 # alias ipsort=&amp;#34;sort -t&amp;#34;.&amp;#34; -k1,1n -k2,2n -k3,3n -k4,4n&amp;#34; alias ipsortr=&amp;#34;sort -t&amp;#34;.&amp;#34; -k1,1nr -k2,2nr -k3,3nr -k4,4nr&amp;#34; 常用命令 # date +&amp;#34;%s&amp;#34; # uninx timestamp date -d @1548987653 # linux, unix timestamp 转 &amp;#34;Fri Feb 1 10:20:53 CST 2019&amp;#34; sudo date -d 1548987653 # mac, unix timestamp 转 &amp;#34;Fri Feb 1 10:20:53 CST 2019&amp;#34; jq # Command-line JSON processor, Download from https://github.</description></item><item><title/><link>https://airdb.wiki/deancn/wiki/linux/shell/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/ssh/</guid><description>SSH # ssh(Secure Shell) 是典型的 C/S 框架，包含服务端(sshd) 和 客户端(ssh)
客户端 ssh # 管理大规模机群的时候会觉得经常输入yes比较麻烦，尤其是主机重装后，还需要清理 known_hosts 文件，可以进行配置一下，这样用起来更顺手。 配置 $HOME/.ssh/config如下:
StrictHostKeyChecking no UserKnownHostsFile /dev/null ConnectTimeout 3 或
alias ssh=&amp;#34;ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o \ ConnectTimeout=3&amp;#34; 服务端 sshd # 配置文件 /etc/ssh/sshd_config
Banner /etc/ssh/banner_file # 登录主机时显示的一个 banner，可以是欢迎语 PasswordAuthentication no PermitRootLogin yes # 允许root用户远程登录 生成证书 # ssh-keygen -b 2048 -C $HOSTNAME
排障 # 如果目标机器无法 ssh，可以使用 -v 参数排查详情。
::: warning 个别主机，可能会设置 /etc/hosts.allow 或 /etc/hosts.deny。 :::</description></item><item><title/><link>https://airdb.wiki/deancn/wiki/linux/shell/tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/tools/</guid><description> Command for Developer # 收藏一些很好的开发工具。
brew (MacOS) # 查看可以升级的软件 brew outdated
CI (Continuous Integration) # github cli
terraform
docker # sudo docker exec -it -e COLUMNS=$(tput cols) -e LINES=$(tput lines) airdb/go bash tmux: 一个优秀的终端复用软件，类似GNU Screen jq: Command-line JSON processor, https://github.com/stedolan/jq</description></item><item><title/><link>https://airdb.wiki/deancn/wiki/linux/shell/vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/vim/</guid><description>VIM # vundle 搭建很方便
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
修改 .vimrc
打开vim在底行模式下输入 BundleInstall
如果还需要其他插件，可以使用 BundleSearch 进行在线查找插件
配置文件内容 # filetype off syntax on set rtp+=~/.vim/bundle/Vundle.vim call vundle#begin() &amp;#34; 加载插件 Plugin &amp;#39;VundleVim/Vundle.vim&amp;#39; Plugin &amp;#39;scrooloose/nerdtree&amp;#39; Plugin &amp;#39;vim-airline/vim-airline&amp;#39; Plugin &amp;#39;fatih/vim-go&amp;#39; Plugin &amp;#39;vim-airline/vim-airline-themes&amp;#39; Plugin &amp;#39;michaelHL/awesome-vim-colorschemes&amp;#39; Plugin &amp;#39;Tagbar&amp;#39; Plugin &amp;#39;Tabular&amp;#39; call vundle#end() filetype plugin indent on &amp;#34; required &amp;#34; 打开自动定位到最后编辑的位置, 需要确认.viminfo当前用户可写 if has(&amp;#34;autocmd&amp;#34;) au BufReadPost * if line(&amp;#34;&amp;#39;\&amp;#34;&amp;#34;) &amp;gt; 1 &amp;amp;&amp;amp; line(&amp;#34;&amp;#39;\&amp;#34;&amp;#34;) &amp;lt;= line(&amp;#34;$&amp;#34;) | exe &amp;#34;normal!</description></item><item><title>抓包</title><link>https://airdb.wiki/deancn/wiki/linux/shell/tcpdump/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://airdb.wiki/deancn/wiki/linux/shell/tcpdump/</guid><description>抓取 udp dns 包 # sudo timeout 60 tcpdump -i any -n port 53 sudo tcpdump -i any -nn udp and port 53 sudo tcpdump -i bond0.1000 -nnAAAA | grep -A 20 -B 3 airdb.io 抓取 Client Hello 包 # sudo tcpdump &amp;ldquo;tcp port 443 and (tcp[((tcp[12] &amp;amp; 0xf0) &amp;raquo;2)] = 0x16) &amp;amp;&amp;amp; (tcp[((tcp[12] &amp;amp; 0xf0) &amp;raquo;2)+5] = 0x01)&amp;rdquo; -w client-hello.pcap</description></item></channel></rss>